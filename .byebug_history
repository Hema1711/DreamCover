c
@order =Order.all
c
"redirect_to '/orders/order_index.html.erb'"
pdf "redirect_to '/orders/order_index.html.erb'"
pdf.present?
pdf = Prawn::Document.new
pdf.present?
c
@order.as_pdf
@order =  Order.all
c
@order =  Order.all
@order =  Order.find(params[:id])
params
c
params
c
n
c
n
c
nn
n
c
n
user_login.authenticate(password)
n
user_login.nil?
user_login
n
@user_login
@user_logibn
params[:email_id]
params[:password]
c
cc
c
n
params[:password]
params[:email_id]
c
n
c
xc
pdf.text "mdfkkherw"
pdf.text "#{"sfrgr"}"
pdf.text "#{sdfklesf}"
pdf.text
pdf.text"
pdf.text "haiiii"
pdf = Prawn::Document.new
params
c
pdf.text "hai\"
pdf.text "haiiii"
pdf = Prawn::Document.new
c
pdf.file "index.html"
pdf.text "index.html"
pdf = Prawn::Document.new
c
@order
params
c
reload!
Stripe::PaymentIntent.create( :customer => customer.id, :amount => @amount,:description => 'Rails Stripe transaction',:currency => 'usd')
customer = Stripe::Customer.create(email: params[:stripeEmail], source: params[:stripeToken])
params
c
n
c
n
c
n
c
n
email_id.present?
email_id.present
email_id.presence
if email_id.presence
n
c
n
c
email_id.presence?
n
c
n
email_id.presence 
[200~email_id.presence 
n
pass_word
password
email_id
eamil_id
n
c
n
c
n
redirect_to user_index_path
n
c
email_id
phone_number
cart_unique_id
unique_id
unique_id,
n
$session_user
n
c
cc
c
@cart_data.present?
@cart_data.present
@cart_data
@cart_data.total_items.present?
@cart_data = Cart.new(cart_params)
cart_params
c
params.permit(:cart)
c
@data = ProductInformation::CartService.create_cart(cart_params)
cart_params
params
c
~c
c
ord= Cart.find_by(cart_unique_id: user_detail.cart_unique_id)
ord=Cart.find_by(cart_unique_id: user_detail.cart_unique_id)
n
Cart.find_by(cart_unique_id: user_detail.cart_unique_id)
user_detail
n
c
n
c
n
product_detail
n
@cart_data
n
user_data.cart_unique_id
user_data
n
Cart
product_data
n
c
user
n
c
n
User.where(is_active: true).find_by(unique_id: unique_id)
unique_id
n
c
n
params
n
@user_info
c
n
@user_info
n
user_params
c
n
user_info.save
n
email_id
unique_id
cart_unique_id
n
cart_unique_id
unique_id
n
c
customer
n
c
Stripe::Customer.create(email: params[:stripeEmail], source: params[:stripeToken])
n
c
params[:stripeToken]
params[:stripeEmail]
n
c
n
c
n
c
@cart_total_price
@product_price
n
c
@product_price
@cart
@product
x.product_price
@cart_total_price
n
c
informations.product_unique_id
informations.all
informations
n
c
n
@informations
@total_count
n
c
n
N
product_size != "all"
if(product_size != "all")
if(product_size != "all"
n
c
n
@total_count
@informations
n
c
n
c
n
c
n
@featured_product
n
c
n
params[:product_size]
params[:product_price]
c
@cart
n
c
n
user_detail
n
c
n
~n
c
cc
c
n
product.update(is_active: false)
n
c
n
